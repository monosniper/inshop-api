type Shop_Module {
    isActive: Boolean!,
    options: JSONObject,
}

type Module {
    id: ID!,
    uuid: String!,
    title: String!,
    description: String,
    slug: String!,
    price: Int,

    options: JSONObject,
    default_options: JSONObject,
    Shop_Module: Shop_Module

    buyed: Boolean
    isActive: Boolean

    Media: [Media!]!
    Dependencies: [Module!]!
}

input CreateModuleInput {
    title: String!
    description: String
    slug: String!
    price: Int
}

input UpdateModuleInput {
    title: String
    description: String
    slug: String
    price: Int
}

input UpdateModulePatch {
    filters: JSONObject
    set: UpdateModuleInput
    media: JSONObject
}

input SaveModuleInput {
    id: ID!
    options: JSONObject!
}

type Mutation {
    createModule(input: CreateModuleInput!): Module!
    deleteModule(id: ID!): Boolean!
    deleteModules(ids: [ID!]!): Boolean!
    updateModule(patch: UpdateModulePatch!): Boolean!
    activateModule(id: ID!): Boolean!
    deactivateModule(id: ID!): Boolean!
    buyModule(id: ID!): Boolean!
    saveModule(input: SaveModuleInput!): Boolean!
}

type Query {
    module(slug: String): [Module!]!
    modules(query: String, limit: Int, buyed: Boolean): [Module!]!
}